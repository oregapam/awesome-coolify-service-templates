# documentation: https://meta.discourse.org/c/documentation/
# slogan: A platform for community discussion. Free, open, simple.
# tags: web,api,forum,community
# port: 3000
# author: @oregapam
# repository: https://github.com/oregapam/awesome-coolify-service-templates

services:
  postgresql:
    image: docker.io/bitnami/postgresql:latest
    restart: always
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_USERNAME=${SERVICE_USER_POSTGRESQL}
      - POSTGRESQL_PASSWORD=${SERVICE_PASSWORD_POSTGRESQL}
      - POSTGRESQL_DATABASE=${POSTGRES_DB:-discourse}
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
      interval: 5s
      timeout: 20s
      retries: 10
  redis:
    image: docker.io/bitnami/redis:latest
    restart: always
    environment:
      - REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}
    volumes:
      - 'redis_data:/bitnami/redis'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - PING
      interval: 5s
      timeout: 10s
      retries: 20
  discourse:
    image: docker.io/bitnami/discourse:3
    restart: always
    volumes:
      - 'discourse_data:/bitnami/discourse'
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # FQDN and port configuration
      - SERVICE_FQDN_DISCOURSE_3000
      - DISCOURSE_HOST=${SERVICE_URL_DISCOURSE}
      # PostgreSQL configuration
      - DISCOURSE_DATABASE_HOST=postgresql
      - DISCOURSE_POSTGRESQL_USERNAME=${SERVICE_USER_POSTGRESQL}
      - DISCOURSE_POSTGRESQL_PASSWORD=${SERVICE_PASSWORD_POSTGRESQL}
      - DISCOURSE_POSTGRESQL_NAME=${POSTGRES_DB}
      - POSTGRESQL_CLIENT_POSTGRES_USER=${SERVICE_USER_POSTGRESQL}
      - POSTGRESQL_CLIENT_POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRESQL}
      - POSTGRESQL_CLIENT_CREATE_DATABASE_NAME=${POSTGRES_DB}
      - 'POSTGRESQL_CLIENT_CREATE_DATABASE_EXTENSIONS=hstore,pg_trgm'
      - BITNAMI_DEBUG=true
      # Redis configuration
      - DISCOURSE_REDIS_HOST=redis
      - DISCOURSE_REDIS_PORT_NUMBER=6379
      - DISCOURSE_REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}
      # SMTP configuration
      - DISCOURSE_SMTP_HOST=${SMTP_HOST:?}
      - DISCOURSE_SMTP_PORT=${SMTP_PORT:-587}
      - DISCOURSE_SMTP_USER=${SMTP_USER:?}
      - DISCOURSE_SMTP_PASSWORD=${SMTP_PASSWORD:?}
      - DISCOURSE_SMTP_PROTOCOL=${SMTP_PROTOCOL:-tls}
      - DISCOURSE_SMTP_AUTH=${SMTP_AUTH:-login}
      # Discourse configuration
      ## Admin user configuration
      - DISCOURSE_USERNAME=${DISCOURSE_USERNAME:-admin}
      - DISCOURSE_PASSWORD=${SERVICE_PASSWORD_DISCOURSE}
      - DISCOURSE_EMAIL=${DISCOURSE_EMAIL:?}
      ## Site configuration
      - DISCOURSE_SITENAME=${DISCOURSE_SITENAME:-Teszt}
  sidekiq:
    image: docker.io/bitnami/discourse:3
    restart: always
    depends_on:
      discourse:
        condition: service_healthy
    volumes:
      - 'sidekiq_data:/bitnami/discourse'
    command: /opt/bitnami/scripts/discourse-sidekiq/run.sh
    environment:
      # FQDN and port configuration
      - DISCOURSE_HOST=${SERVICE_URL_DISCOURSE}
      # PostgreSQL configuration
      - DISCOURSE_DATABASE_HOST=postgresql
      - DISCOURSE_DATABASE_USER=${SERVICE_USER_POSTGRESQL}
      - DISCOURSE_DATABASE_PASSWORD=${SERVICE_PASSWORD_POSTGRESQL}
      - DISCOURSE_DATABASE_NAME=${POSTGRES_DB}
      # Redis configuration
      - DISCOURSE_REDIS_HOST=redis
      - DISCOURSE_REDIS_PORT_NUMBER=6379
      - DISCOURSE_REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}
      # SMTP configuration
      - DISCOURSE_SMTP_HOST=${SMTP_HOST}
      - DISCOURSE_SMTP_PORT=${SMTP_PORT}
      - DISCOURSE_SMTP_USER=${SMTP_USER}
      - DISCOURSE_SMTP_PASSWORD=${SMTP_PASSWORD}
      - DISCOURSE_SMTP_PROTOCOL=${SMTP_PROTOCOL}
      - DISCOURSE_SMTP_AUTH=${SMTP_AUTH}
volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  discourse_data:
    driver: local